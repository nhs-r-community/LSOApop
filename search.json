[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 NHS-R Community Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/NHSRpopulation.html","id":"indices-of-multiple-deprivation-imd","dir":"Articles","previous_headings":"","what":"Indices of Multiple Deprivation (IMD)","title":"Getting started with NHSRpopulation","text":"get IMD scores (raw scores ranked deciles) dataset run following code generate random example postcodes: , using get_imd() function vector (returning just first five columns): data frame (returning just first five columns): function can used fix missing postcodes terminated invalid: Currently, although postcode fixed column new_postcode IMD overwritten.","code":"library(purrr) library(tibble) library(PostcodesioR) library(NHSRpopulation) #>  #> ── This is NHSRpopulation 0.0.2 ──────────────────────────────────────────────── #> ℹ Please report any issues or ideas at: #> ℹ https://github.com/nhs-r-community/NHSRpopulation/issues  postcodes <- purrr::map_chr(   1:10,   .f = ~PostcodesioR::random_postcode() |>      purrr::pluck(1)  )   tibble_postcodes <- postcodes |>    tibble::as_tibble() NHSRpopulation::get_imd(postcodes) |>    dplyr::select(1:5) #> # A tibble: 10 × 5 #>      IMD imd_decile imd_quintile postcode new_postcode #>    <int>      <dbl>        <dbl> <chr>    <chr>        #>  1 20517          7            4 CH63 4JN CH63 4JN     #>  2 15785          5            3 CM1 4TD  CM1 4TD      #>  3   387          1            1 BT44 9JD BT44 9JD     #>  4 21470          7            4 TR3 6HF  TR3 6HF      #>  5 31075         10            5 GL12 7PN GL12 7PN     #>  6 14788          5            3 SS8 8NF  SS8 8NF      #>  7 23242          8            4 SL3 7BE  SL3 7BE      #>  8   671          1            1 DE21 4LN DE21 4LN     #>  9 20487          7            4 EX2 9BX  EX2 9BX      #> 10 21122          7            4 B79 0LL  B79 0LL NHSRpopulation::get_imd(tibble_postcodes$value) |>    dplyr::select(1:5) #> # A tibble: 10 × 5 #>      IMD imd_decile imd_quintile postcode new_postcode #>    <int>      <dbl>        <dbl> <chr>    <chr>        #>  1 20517          7            4 CH63 4JN CH63 4JN     #>  2 15785          5            3 CM1 4TD  CM1 4TD      #>  3   387          1            1 BT44 9JD BT44 9JD     #>  4 21470          7            4 TR3 6HF  TR3 6HF      #>  5 31075         10            5 GL12 7PN GL12 7PN     #>  6 14788          5            3 SS8 8NF  SS8 8NF      #>  7 23242          8            4 SL3 7BE  SL3 7BE      #>  8   671          1            1 DE21 4LN DE21 4LN     #>  9 20487          7            4 EX2 9BX  EX2 9BX      #> 10 21122          7            4 B79 0LL  B79 0LL postcodes <- c(\"HD1 2UT\", \"HD1 2UU\", \"HD1 2UV\")  NHSRpopulation::get_imd(postcodes) |>    dplyr::select(1:5) #> ℹ The following postcodes are terminated: #>   HD1 2UT #>   and have been replaced with these current postcodes: #>   HD1 2RD #> ℹ The following postcodes are invalid: #>   HD1 2UV #>   and have been replaced with these nearby postcodes: #>   HD1 2UD #> # A tibble: 3 × 5 #>     IMD imd_decile imd_quintile postcode new_postcode #>   <int>      <dbl>        <dbl> <chr>    <chr>        #> 1    NA         NA           NA HD1 2UT  HD1 2RD      #> 2  9558          3            2 HD1 2UU  HD1 2UU      #> 3    NA         NA           NA HD1 2UV  HD1 2UD"},{"path":"/articles/NHSRpopulation.html","id":"lower-super-output-area-lsoa","dir":"Articles","previous_headings":"","what":"Lower Super Output area (LSOA)","title":"Getting started with NHSRpopulation","text":"return IMD, imd_decile imd_quintile LSOAs can vector: data frame: functions return everything LSOAs like return random postcodes decile: just first postcode appears decile:","code":"# Example LSOAs from each England Decile group lsoa_imd <- c(\"E01000002\",               \"E01000001\",               \"E01000117\",               \"E01000119\",               \"E01000069\",               \"E01000070\",               \"E01000066\",               \"E01000005\",               \"E01000008\",               \"E01000048\")  NHSRpopulation::get_lsoa(lsoa_imd) |>    head(10) # first 10 rows #>     IMD    LSOA11    LSOA21       ICB   PCDS imd_decile imd_quintile #> 1  8678 E01000005 E01000005 E54000029 E1 7AA          3            2 #> 2  8678 E01000005 E01000005 E54000029 E1 7AD          3            2 #> 3  8678 E01000005 E01000005 E54000029 E1 7AE          3            2 #> 4  8678 E01000005 E01000005 E54000029 E1 7AF          3            2 #> 5  8678 E01000005 E01000005 E54000029 E1 7AW          3            2 #> 6  8678 E01000005 E01000005 E54000029 E1 7AX          3            2 #> 7  8678 E01000005 E01000005 E54000029 E1 7BH          3            2 #> 8  8678 E01000005 E01000005 E54000029 E1 7BS          3            2 #> 9  8678 E01000005 E01000005 E54000029 E1 7DA          3            2 #> 10 8678 E01000005 E01000005 E54000029 E1 7DB          3            2 tibble_lsoa_imd <- lsoa_imd |>    tibble::as_tibble()  NHSRpopulation::get_lsoa(tibble_lsoa_imd$value) |>    head(10) #>     IMD    LSOA11    LSOA21       ICB   PCDS imd_decile imd_quintile #> 1  8678 E01000005 E01000005 E54000029 E1 7AA          3            2 #> 2  8678 E01000005 E01000005 E54000029 E1 7AD          3            2 #> 3  8678 E01000005 E01000005 E54000029 E1 7AE          3            2 #> 4  8678 E01000005 E01000005 E54000029 E1 7AF          3            2 #> 5  8678 E01000005 E01000005 E54000029 E1 7AW          3            2 #> 6  8678 E01000005 E01000005 E54000029 E1 7AX          3            2 #> 7  8678 E01000005 E01000005 E54000029 E1 7BH          3            2 #> 8  8678 E01000005 E01000005 E54000029 E1 7BS          3            2 #> 9  8678 E01000005 E01000005 E54000029 E1 7DA          3            2 #> 10 8678 E01000005 E01000005 E54000029 E1 7DB          3            2 NHSRpopulation::get_lsoa(lsoa_imd, return = \"random\") #>      IMD    LSOA11    LSOA21       ICB     PCDS imd_decile imd_quintile #> 1   8678 E01000005 E01000005 E54000029   E1 7ED          3            2 #> 2  29199 E01000001 E01000001 E54000029 EC2Y 8DN          9            5 #> 3  30379 E01000002 E01000002 E54000029 EC2Y 9HR         10            5 #> 4  24958 E01000117 E01000117 E54000028  EN4 8NN          8            4 #> 5   3117 E01000048 E01034479 E54000029 IG11 7RS          1            1 #> 6   5010 E01000008 E01000008 E54000029 IG11 8LS          2            1 #> 7  13531 E01000070 E01000070 E54000029 IG11 9LR          5            3 #> 8  17580 E01000069 E01000069 E54000029 IG11 9HD          6            3 #> 9  10329 E01000066 E01000066 E54000029 IG11 9AS          4            2 #> 10 22657 E01000119 E01000119 E54000028  N14 5BD          7            4 NHSRpopulation::get_lsoa(lsoa_imd, return = \"first\") #>      IMD    LSOA11    LSOA21       ICB     PCDS imd_decile imd_quintile #> 1   8678 E01000005 E01000005 E54000029 EC3N 2PX          3            2 #> 2  29199 E01000001 E01000001 E54000029 EC2Y 8NJ          9            5 #> 3  30379 E01000002 E01000002 E54000029 EC2Y 9ST         10            5 #> 4  24958 E01000117 E01000117 E54000028  N20 0BB          8            4 #> 5   3117 E01000048 E01034479 E54000029 IG11 7TW          1            1 #> 6   5010 E01000008 E01000008 E54000029 IG11 8NB          2            1 #> 7  13531 E01000070 E01000070 E54000029 IG11 9YB          5            3 #> 8  17580 E01000069 E01000069 E54000029 IG11 9LG          6            3 #> 9  10329 E01000066 E01000066 E54000029 IG11 9EX          4            2 #> 10 22657 E01000119 E01000119 E54000028  N14 7PL          7            4"},{"path":"/articles/calc-local-imd.html","id":"imd-ranks","dir":"Articles","previous_headings":"","what":"IMD ranks","title":"How to calculate 'local' IMD deciles","text":"mentioned , raw IMD scores can grouped based rank, usually 10 groups (deciles) calculated based IMD scores entire country. decile scores, lower deciles representing ‘deprived’ areas higher deciles represent ‘less deprived’. can confusing IMD scores IMD deciles scored opposite directions.","code":""},{"path":"/articles/calc-local-imd.html","id":"england-imd-deciles","dir":"Articles","previous_headings":"IMD ranks","what":"England IMD deciles","title":"How to calculate 'local' IMD deciles","text":"Figure 2.1 illustrates distribution IMD deciles calculated based whole country (England) can relatively unequal comparing individual LAs (e.g., Nottingham (City) versus Rushcliffe). cases using deciles calculated based IMD scores entire country may miss important regional differences useful recalculate IMD deciles within Local Authorities. Whilst Ministry Housing, Communities & Local Government (2019) given guidance calculate analyse IMD scores, clear examples guidance calculate local IMD ranks.","code":"# Plot deciles ---- imd |>   mutate(imd_decile = factor(imd_decile,     levels = 1:10,     labels = c(\"1 - Most deprived\", 2:9, \"10 - Least deprived\")   )) |>   filter(la_code %in% la_code_nott_city_notts_county) |>   ggplot(aes(factor(imd_decile), fill = factor(imd_decile))) +   geom_bar() +   scale_fill_viridis_d() +   scale_x_discrete(labels = 1:10) +   labs(x = \"IMD decile\", y = \"Count\", fill = \"IMD decile\") +   ggtitle(\"Fig. 2.1. Combined ENG IMD deciles for LSOAs in Nott City and Notts County\") imd |>   mutate(imd_decile = factor(imd_decile,     levels = 1:10,     labels = c(\"1 - Most deprived\", 2:9, \"10 - Least deprived\")   )) |>   filter(la_code %in% la_code_nott_city_notts_county) |>   ggplot(aes(factor(imd_decile), fill = factor(imd_decile))) +   geom_bar() +   scale_fill_viridis_d() +   labs(x = \"IMD decile\", y = \"Count\", fill = \"IMD decile\") +   facet_wrap(~la_name, ncol = 2) +   scale_x_discrete(labels = 1:10) +   ggtitle(\"Fig. 2.2. Individual ENG IMD deciles for LSOAs in Nott City and Notts County\")"},{"path":"/articles/calc-local-imd.html","id":"calculate-local-imd-deciles-within-local-authorities","dir":"Articles","previous_headings":"IMD ranks","what":"Calculate ‘local’ IMD deciles within Local Authorities","title":"How to calculate 'local' IMD deciles","text":"following example illustrates local IMD ranks can calculated within selected group LAs (see first code chunk list LA codes defined: la_code_nott_city_notts_county). recalculate IMD deciles Local Authorities data needs grouped defined group Local Authorities (see code , variable la_group gets calculated example) year IMD score (‘group_by(la_code, imd_year)’). Next, calculate deciles using function ‘dplyr::ntile()’ specifying ‘n = 10’. calculate quintiles (5 groups) argument need changed n = 5. take account IMD scores IMD ranks scored opposite direction, need add minus IMD score: ntile(-imd_score, n = 10).","code":"# Calculate IMD decile ranks (n = 10) for local authorities ---- imd_by_la <- imd |>   mutate(la_groups = case_when(     la_code %in% la_code_nott_city_notts_county ~ \"notts_city_county\"   )) |>   filter(la_groups == \"notts_city_county\") |>   group_by(la_groups, imd_year) |>   mutate(imd_decile_la = ntile(-imd_score, n = 10))"},{"path":"/articles/calc-local-imd.html","id":"local-imd-deciles-for-nott-city-and-notts-county","dir":"Articles","previous_headings":"IMD ranks","what":"Local IMD deciles for Nott City and Notts County","title":"How to calculate 'local' IMD deciles","text":"expected, Figure 3.1 shows equal distribution recalculated ‘local’ IMD deciles LAs Nottingham City Nottinghamshire County. Figure 3.2 shows recalculated ‘local’ IMD ranks individual selected LA. sill differences distributions ‘local’ IMD ranks across different LAs. However, rankings recalculated using IMD scores LAs interest may therefore better presentation variation across LAs.","code":"# Plot ENG and NOTTS deciles ---- imd_by_la |>   mutate(imd_decile_la = factor(imd_decile_la,     levels = 1:10,     labels = c(\"1 - Most deprived\", 2:9, \"10 - Least deprived\")   )) |>   filter(la_code %in% la_code_nott_city_notts_county) |>   ggplot(aes(factor(imd_decile_la), fill = factor(imd_decile_la))) +   geom_bar() +   scale_fill_viridis_d() +   labs(x = \"IMD decile\", y = \"Count\", fill = \"IMD decile\") +   scale_x_discrete(labels = 1:10) +   ggtitle(\"Fig. 3.1. Combined 'local' IMD deciles for LSOAs in Nott City and Notts County\") # Plot ENG and NOTTS deciles ---- imd_by_la |>   mutate(imd_decile_la = factor(imd_decile_la,     levels = 1:10,     labels = c(\"1 - Most deprived\", 2:9, \"10 - Least deprived\")   )) |>   filter(la_code %in% la_code_nott_city_notts_county) |>   ggplot(aes(factor(imd_decile_la), fill = factor(imd_decile_la))) +   geom_bar() +   scale_fill_viridis_d() +   labs(x = \"IMD decile\", y = \"Count\", fill = \"IMD decile\") +   facet_wrap(~la_name, ncol = 2) +   scale_x_discrete(labels = 1:10) +   ggtitle(\"Fig. 3.2. Individual 'local' IMD deciles for LSOAs in Nott City and Notts County\")"},{"path":"/articles/calc-local-imd.html","id":"compare-distributions-of-imd-deciles","dir":"Articles","previous_headings":"","what":"Compare distributions of IMD deciles","title":"How to calculate 'local' IMD deciles","text":"changes IMD decile ranks can seen comparing bar plots shown (e.g., Fig 2.2 vs. Fig 3.2) – can hard spot. Changes distribution IMD deciles (see density plots Figure 4) illustrate effect recalculating ‘local’ IMD scores bit clearer. plot left title ‘ENG IMD’ shows distribution IMD deciles IMD scores England used calculate decile ranks. plot right (Local IMD) shows distribution IMD deciles IMD scores selected LAs used. effect recalculating local IMD scores can seen changes shape density distribution (e.g., narrow shape vs flat shape, changes peak x axis) individual IMD deciles.","code":"imd_by_la |>   pivot_longer(     cols = c(imd_decile, imd_decile_la),     names_to = \"imd_method\", values_to = \"imd_value\"   ) |>   mutate(imd_value = factor(imd_value,     levels = 1:10,     labels = c(\"1 - Most deprived\", 2:9, \"10 - Least deprived\")   )) |>   filter(la_code %in% la_code_nott_city_notts_county) |>   ggplot(aes(x = imd_score, fill = factor(imd_value))) +   scale_fill_viridis_d(direction = 1) +   labs(x = \"IMD score\", y = NULL, fill = \"IMD decile\") +   geom_density(alpha = .6, adjust = 2) +   facet_wrap(~ factor(imd_method,     levels = c(       \"imd_decile\",       \"imd_decile_la\"     ),     labels = c(       \"END IMD\",       \"Local IMD\"     )   )) +   ggtitle(\"Fig. 4. Distributions of ENG and local IMD deciles\")"},{"path":"/articles/calc-local-imd.html","id":"additional-resources","dir":"Articles","previous_headings":"","what":"Additional resources","title":"How to calculate 'local' IMD deciles","text":"blog post Turner (2021) also discusses calculate local IMD scores illustrating examples SQL R.","code":""},{"path":"/articles/calc-local-imd.html","id":"notes-for-anyone-contributing-to-the-html-and-vignettes","dir":"Articles","previous_headings":"","what":"Notes for anyone contributing to the html and vignettes","title":"How to calculate 'local' IMD deciles","text":"pages built https://nhs-r-community.github.io/NHSRpopulation/ done using package {pkgdown}. order rebuild pages changes use pkgdown::build_site() console. number changes supporting files folder docs/ need committed.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zoë Turner. Author, maintainer. Milan Wiedemann. Author. Chris Beeley. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Turner Z, Wiedemann M, Beeley C (2024). NHSRpopulation: Indices Multiple Deprivation (IMD) England. R package version 0.0.2, https://nhs-r-community.github.io/NHSRpopulation/.","code":"@Manual{,   title = {NHSRpopulation: Indices of Multiple Deprivation (IMD) for England},   author = {Zoë Turner and Milan Wiedemann and Chris Beeley},   year = {2024},   note = {R package version 0.0.2},   url = {https://nhs-r-community.github.io/NHSRpopulation/}, }"},{"path":"/index.html","id":"nhsrpopulation-","dir":"","previous_headings":"","what":"Indices of Multiple Deprivation (IMD) for England","title":"Indices of Multiple Deprivation (IMD) for England","text":"goal NHSRpopulation make population estimates Lower layer Super Output Areas (LSOA) Indices Multiple Deprivation (IMD) easily available R. first iteration package data saved https://www.gov.uk/government/statistics/english-indices--deprivation-2019 subsequently moved API https://services1.arcgis.com/ keep data date (although updated every years) give access nations across UK including Wales, Scotland, Northern Ireland well England.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Indices of Multiple Deprivation (IMD) for England","text":"can install current version NHSRpopulation GitHub : find functions vignette Getting Started information recalculate IMD deciles local areas England see vignette.","code":"# install.packages(\"remotes\") remotes::install_github(\"nhs-r-community/NHSRpopulation\")"},{"path":"/index.html","id":"sources-of-data","dir":"","previous_headings":"","what":"Sources of Data","title":"Indices of Multiple Deprivation (IMD) for England","text":"original source data provided R package available ONS licenced Open Government Licence v3.0.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Indices of Multiple Deprivation (IMD) for England","text":"Please note NHSRpopulation project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"special-note-of-thanks","dir":"","previous_headings":"","what":"Special note of thanks","title":"Indices of Multiple Deprivation (IMD) for England","text":"package originally created Milan Wiedemann.","code":""},{"path":"/reference/check_postcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Use NHSRpostcodetools to validate postcodes — check_postcodes","title":"Use NHSRpostcodetools to validate postcodes — check_postcodes","text":"Use NHSRpostcodetools validate postcodes","code":""},{"path":"/reference/check_postcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use NHSRpostcodetools to validate postcodes — check_postcodes","text":"","code":"check_postcodes(data)"},{"path":"/reference/check_postcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use NHSRpostcodetools to validate postcodes — check_postcodes","text":"data dataframe vector","code":""},{"path":"/reference/check_postcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use NHSRpostcodetools to validate postcodes — check_postcodes","text":"data frame data original along postcode information","code":""},{"path":"/reference/get_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a GET request to the API — get_api","title":"Send a GET request to the API — get_api","text":"Send GET request API","code":""},{"path":"/reference/get_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a GET request to the API — get_api","text":"","code":"get_api(query_params)"},{"path":"/reference/get_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a GET request to the API — get_api","text":"query_params uses output function set_country_params()","code":""},{"path":"/reference/get_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a GET request to the API — get_api","text":"list","code":""},{"path":"/reference/get_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the vector of country count of LSOAs — get_count","title":"Return the vector of country count of LSOAs — get_count","text":"Return vector country count LSOAs","code":""},{"path":"/reference/get_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the vector of country count of LSOAs — get_count","text":"","code":"get_count(response_list)"},{"path":"/reference/get_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the vector of country count of LSOAs — get_count","text":"response_list","code":""},{"path":"/reference/get_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the vector of country count of LSOAs — get_count","text":"vector","code":""},{"path":"/reference/get_country_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the country count — get_country_count","title":"Get the country count — get_country_count","text":"relies function set_country_params needs split different nations","code":""},{"path":"/reference/get_country_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the country count — get_country_count","text":"","code":"get_country_count()"},{"path":"/reference/get_country_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the country count — get_country_count","text":"vector","code":""},{"path":"/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame — get_data","title":"Create a data frame — get_data","text":"Create data frame","code":""},{"path":"/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame — get_data","text":"","code":"get_data(response_list)"},{"path":"/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame — get_data","text":"response_list uses output function parse_json()","code":""},{"path":"/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame — get_data","text":"data frame","code":""},{"path":"/reference/get_imd.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that validates postcodes and links to IMD datasets, returning the\nscore and generated deciles and quintiles. — get_imd","title":"Function that validates postcodes and links to IMD datasets, returning the\nscore and generated deciles and quintiles. — get_imd","text":"Function validates postcodes links IMD datasets, returning score generated deciles quintiles.","code":""},{"path":"/reference/get_imd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that validates postcodes and links to IMD datasets, returning the\nscore and generated deciles and quintiles. — get_imd","text":"","code":"get_imd(.data, var = \"postcode\", fix_invalid = TRUE)"},{"path":"/reference/get_imd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that validates postcodes and links to IMD datasets, returning the\nscore and generated deciles and quintiles. — get_imd","text":".data data frame column postcodes, vector postcodes. var String symbol. name variable data frame comprises postcodes submitted. acceptable symbol standard string. fix_invalid Boolean, default TRUE. Whether try fix postcodes found (potentially terminated codes, contain typos).","code":""},{"path":"/reference/get_lsoa.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that gets IMD deciles and quintiles for LSOA codes. — get_lsoa","title":"Function that gets IMD deciles and quintiles for LSOA codes. — get_lsoa","text":"Function gets IMD deciles quintiles LSOA codes.","code":""},{"path":"/reference/get_lsoa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that gets IMD deciles and quintiles for LSOA codes. — get_lsoa","text":"","code":"get_lsoa(.data, return = c(\"all\", \"random\", \"first\"))"},{"path":"/reference/get_lsoa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that gets IMD deciles and quintiles for LSOA codes. — get_lsoa","text":".data data frame column lsoas, vector lsoas. return data frame postcodes LSOA area default, one random decile first decile example postcodes.","code":""},{"path":"/reference/parse_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the JSON response — parse_json","title":"Parse the JSON response — parse_json","text":"Parse JSON response","code":""},{"path":"/reference/parse_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the JSON response — parse_json","text":"","code":"parse_json(json)"},{"path":"/reference/parse_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the JSON response — parse_json","text":"json uses output function get_api()","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/set_country_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Country parameters to return the total number of LSOAs — set_country_params","title":"Country parameters to return the total number of LSOAs — set_country_params","text":"Deciles Quintiles available source need # calculated total number LSOAs nation. TODO expand nations depending starting letter LSOA England = E Wales = W Scotland = S Northern Ireland = (9 https://statistics.ukdataservice.ac.uk/dataset/2011-census-geography-boundaries-lower-layer-super-output-areas--data-zones","code":""},{"path":"/reference/set_country_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country parameters to return the total number of LSOAs — set_country_params","text":"","code":"set_country_params()"},{"path":"/reference/set_country_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Country parameters to return the total number of LSOAs — set_country_params","text":"list parameters required, currently England ","code":""},{"path":"/reference/set_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to services1.arcgis API for data — set_params","title":"Connect to services1.arcgis API for data — set_params","text":"Connect services1.arcgis API data","code":""},{"path":"/reference/set_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to services1.arcgis API for data — set_params","text":"","code":"set_params(data, type = c(\"postcode\", \"lsoa\"))"},{"path":"/reference/set_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to services1.arcgis API for data — set_params","text":"data data frame output NHSRpostcodetools type select parameters change","code":""},{"path":"/reference/set_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to services1.arcgis API for data — set_params","text":"list parameters required, currently PCDS","code":""}]
